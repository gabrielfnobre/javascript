//DIFERENÇA ENTRE Objects e objects:
//Geralmente quando falamos de object logo lembramos de POO, onde um objeto só pode ser gerado á partir de uma classe. Mas no Javascript o conceito de object é muito mais amplo, pois como vimos na aula 037 as funções têm um papel muito importante no Javascript, até mesmo classes são encaradas como funções, e isso não é diferente no caso do tipo Object que também é encarado como uma função.
//Por isso, lembre-se que no Javascript vamos ter 2 tipos de object:
/*     
        Object: com letra maíscula uma função interna do Javascript que é usada para tipar elementos com o tipo Object, 
                onde podemos até instanciar objetos para essa função, como se ela fosse uma classe;

        object: O object com letra minúscula se referindo a elementos que realmente são objetos (um conjunto de par chave e valor), que são os objetos gerados á partir de uma classe, ou literalmente, como vimos na lição 034;
*/

//OBJECTS COM LETRA MAIÚSCULA SÃO FUNÇÕES:
console.log('1) ', typeof Object); //Perceba que o Object com letra maiúscula é uma função...
console.log('2) ', typeof new Object); //Perceba que podemos instanciar Object, já que funções são tratadas como se fossem Classes...
console.log('3) ', typeof new Object()); //Uma chamada convencional de função ou classe usando parênteses...



//OBJECTS COM LETRA MINÚSCULA SÃO OBJETOS DE CLASSES OU FUNÇÕES:
const Cliente = function() {};
console.log('4) ', typeof Cliente); //Uma função criada por nós...
console.log('5) ', typeof Cliente()); //chamada convencional de função...
console.log('6) ', typeof new Cliente); //Perceba que foi possível instanciar a função, e ela é um objeto...
class Produto {};
console.log('7) ', typeof Produto); //classe criada é encarada como function...
console.log('8) ', typeof new Produto); //Perceba que foi possível instanciar a classe sem problemas e gerar um objeto...
console.log('9) ', typeof new Produto()); //invocação convencional de uma classe...