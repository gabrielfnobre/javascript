//DEFINEPROPERTY():
//A função built-in "defineProperty()" é usada em objects para definir como as propriedades de uma determinada chave dentro de um objeto deve se comportar. O que queremos dizer com isso é que com essa função é possível definir se uma determinada chave irá aparecer, se poderá ser sobrescrita ou não. Além de fazer o convencional, que é definir nome da Chave e Valores para ela...
//Em resposta entries() sempre retornará um array com pares de chave e valor, onde cada chave e valor virá dentro de um array...
//Veja como usá-la...

const pessoa = {
    nome: 'Gabriel', 
    idade: 30,
    peso: 95
}

//Veja que para utilizá-la nós usamos a função construtora "Object" seguida pelo método "defineProperty()"...
Object.defineProperty(pessoa, "dataNascimento", { //A primeira coisa que identificamos no método é o nome do objeto seguido pelo nome da chave, o nome da chave sempre deverá ser escrito entre áspas. Em seguida para alterar as propriedades da chave abrimos um campo de objetos...
    enumerable: true, //enumerable é um dos campos de defineProperty, ele define se uma chave ficará visível ou não...
    writable: false, //writable define se será possível mudar o valor da chave, ou se ele ficará congelado...
    value: '01/01/2021' //value define o valor que a chave deve receber...
})

pessoa.dataNascimento = '01/01/2017' //Veja que tentamos sobrescrever a chave, mas não conseguimos pois o writable dela é "false"...
console.log(pessoa.dataNascimento)

Object.defineProperty(pessoa, 'peso', { //Veja que fizemos com que a chave "peso" ficasse invisível...
    enumerable: false
})

console.log(Object.keys(pessoa))