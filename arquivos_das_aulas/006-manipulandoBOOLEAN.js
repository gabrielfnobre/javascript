//BOOLEAN:
//Os valores booleanos são definidos como verdadeiro ou falso. Eles podem também ser representados pelos dígitos binários 0 (para false) e 1 (para verdadeiro).
//OBSERVAÇÕES: Por padrão, os números 1 e 0 quando usados como literiais apenas representam valores inteiros, porém, quando usados num contexto diferente, como por exemplo em estruturas de bloco de decisão, eles podem ser encarados como valores booleanos.


//USANDO typeof PARA DESCOBRIR TIPOS DE DADOS...
let estaChovendo = false; //Veja qual o tipo de dado para "false"
console.log(`1) ${typeof estaChovendo}`);
estaChovendo = true; //Veja qual é o tipo de dado para "true"
console.log(`2) ${typeof estaChovendo}`);


//LITERAIS BOOLEANOS EM JAVASCRIPT:
let isAtive = true; //podemos usar diretamente o nome "true"
let isInative = false; //ou "false"
console.log(`3) ${isAtive}`);
console.log(`4) ${isInative}`);


//CONVERTENDO NUMBERS EM BOOLEAN COM "!"(NEGAÇÃO) "!!"(VERIFICADOR BOOLEANO):
isAtive = 1;
console.log(`5) ${!!isAtive}`); //Quando usamos o operador booleano "!!" verificamos se um valor é verdadeiro ou falso...
console.log(`6) ${!isAtive}`); //Quando usamos o operador booleano "!" negamos um valor, se ele for veradeiro se torna falso e vice-versa...
isInative = 0; //Veja que no Javascript que o valor "0" é visto como false
console.log(`5) ${!!isInative}`); //tem que dar false...
console.log(`6) ${!isInative}`); //tem que dar true...


//VALORES QUE PODEM GERAR VERDADEIRO EM JAVASCRIPT:
console.log(`7) ${!!3}`); //Qualquer número positivo que não seja 0...
console.log(`8) ${!!-1}`); //Qualquer número negativo que não seja 0...
console.log(`9) ${!!' '}`); //Qualquer espaço pode ser positivo...
console.log(`10) ${!![]}`); //Qualquer array, mesmo que não tenha nenhum índice pode ser true...
console.log(`11) ${!!{}}`); //Qualquer objeto, mesmo que não tenha nada, pode ser true...
console.log(`12) ${!!Infinity}`); //Qualquer valor infinity, pode ser true...
console.log(`13) ${!!'Oi'}`); //Qualquer caracter ou string, pode ser true...
console.log(`14) ${!!(isAtive = true)}`); //Qualquer expressão que resulte num valor que não seja true ou diferente de "0"...


//VALORES QUE PODEM GERAR FALSO EM JAVASCRIPT:
console.log(`15) ${!!0}`); //Qualquer número positivo que seja 0...
console.log(`16) ${!!-0}`); //Qualquer número negativo que seja 0...
console.log(`17) ${!!''}`); //Qualquer String que não tenha caractere nenhum...
console.log(`18) ${!!null}`); //Qualquer valor null será false...
console.log(`19) ${!!NaN}`); //Not a Number também será false...
console.log(`20) ${!!undefined}`); //também será falso...
console.log(`22) ${!!(isInative = false)}`); //Qualquer expressão que resulte num valor que seja false ou "0"...


//USANDO BOOLEAN NUM TESTE REAL:
let nome = ''; //Perceba que o nome gera um booleano false por não ter nada dentro da string...
console.log(`23) ${nome || 'Desconhecido'}`); //Como o nome gera um false, o operador lógico OU trará o valor verdadeiro que será "Desconhecido"...
nome = 'Gabriel'; //Porém, quando colocamos o nome o valor do nome será verdadeiro e será reconhecido pelo operador retornando o nome colocado na variável "nome"...
console.log(`24) ${nome || 'Desconhecido'}`);